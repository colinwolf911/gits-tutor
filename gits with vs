#clone down to local machine in vs
git clone  https://github.com/colinwolf911/gits-tutor.git
# change dirctory inside the folder
cd gits-tutor
#list everything 
ls 
#change the file in gits
#track the files
git  add .
#-m is the message
git commit -m "add index.html." -m "some description"
git push

#local machine with gits
ssh -keygen -t rsa -b 4096 -C "colinwolf@gmail.com
ls
(testkey testkey.pub ) pub is the public key
#print out key
cat testkey.pub
pbcopy </testkey .pub

#move to the new folder
#move back cd ..
cd../gits2 
# move forward
cd gits2

#after add files git init to update
git init 
#check status
git status
#add files
git add readme2.md 
#check files
git status
#add something
git commit -m "created readme2" -m "something new"

#push alive
git push origin master
(not working because we didn't create repository at git )
git remote add origin  https://github.com/colinwolf911/readme2.git
git remote -v
(show any remote repositories)
#now we can use git push origin
git push origin  master 
or (git push -u origin master)


#git branching 
master branch (default)
feature branch  are same  ,they cannot see wach other
hotfix branch

git branch
git checkout -b  feature
(name of your branch)
git branch 
git checkout master

git branch
git checkout feature

#back yo feature
#change in readme.md
#eg: open index
git status
git add readme.md
git commit -m "updated readme"
git checkout master
(it will come back to the master)

#before merge two to see the change
git diff feature
#merge two branches
git merge feature

#push them into git
git checkout feature
git status
git push
#need to tell the git which branch need to be pushed
git push --set-upstream origin feature

#-u for short set-upstream
git push -u origin feature

#once pr merge it will delete

#in git page
create a pull requests 
merge the pull

#switch the master 
git checkout master

git pull 
git branch

#delete the branch
git branch -d freature

git branch 
git checkout -b quick-test

#new branch has been created  as quick-test
git status

#show the changing 
git diff

#-a for add -m for message
-am for modified message not for new created


git commit -am "added world"
git check master

#both branch added something
git branch quick-test
#stash for temper holding
git  checkout quick-test
git diff master

git merge master

git diff
git commit -am "updated changged"

git reset readme.md
git commit -m "added install step"

git status
#back to the previous one 
git reset HEAD~1 

git status
git diff

#many difficult commit
git log

#copy the hash
 git reset 1232498-87528-054
 
#get rid of all changing 
git log
git reset --hard 

#forking 
#making copy from others

#pull
create pull requist











